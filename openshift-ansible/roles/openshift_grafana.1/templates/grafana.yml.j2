---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: {{ grafana_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
      name: grafana
    spec:
      serviceAccountName: {{ grafana_serviceaccount_name }}
{% if grafana_node_selector is iterable and grafana_node_selector | length > 0 %}
      nodeSelector:
{% for key, value in grafana_node_selector.items() %}
        {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
      containers:
   
      - name: grafana
        image: "{{ l_openshift_grafana_image_prefix }}{{ l_openshift_grafana_image }}:{{ l_openshift_grafana_image_version }}"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
{% if openshift_grafana_memory_requests is defined and openshift_grafana_memory_requests is not none %}
            memory: "{{ openshift_grafana_memory_requests }}"
{% endif %}
{% if openshift_grafana_cpu_requests is defined and openshift_grafana_cpu_requests is not none %}
            cpu: "{{ openshift_grafana_cpu_requests }}"
{% endif %}
          limits:
{% if openshift_grafana_memory_limit is defined and openshift_grafana_memory_limit is not none %}
            memory: "{{ openshift_grafana_memory_limit }}"
{% endif %}
{% if openshift_grafana_cpu_limit is defined and openshift_grafana_cpu_limit is not none %}
            cpu: "{{ openshift_grafana_cpu_limit }}"
{% endif %}
        ports:
        - name: grafana-http
          containerPort: {{ grafana_service_targetport }}
        volumeMounts:
        - mountPath: "/var/lib/grafana"
          name: grafana-data
        - mountPath: "/usr/share/grafana/conf"
          name: grafana-config
        - mountPath: /etc/tls/private
          name: grafana-tls-secret
        - mountPath: /etc/proxy/secrets
          name: grafana-proxy-secrets

      volumes:
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: grafana-proxy-secrets
        secret:
          secretName: grafana-proxy
      - name: grafana-tls-secret
        secret:
          secretName: grafana-tls
      - name: grafana-data
{% if grafana_storage_type == 'pvc' %}
        persistentVolumeClaim:
          claimName: {{ grafana_pvc_name }}
{% else %}
        emptydir: {}
{% endif %}
